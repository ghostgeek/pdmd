<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="ERROR" monitorInterval="30">
    <!--先定义所有的appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="[%d{MM-dd HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
        </console>

        <!--日志大于50M时，自动备份存档，生成新的文件-->
        <RollingFile name="logfile" fileName="logs/system.log" filePattern="logs/$${date:yyyy-MM}/system-%d{yyyy-MM-dd}-%i.log">
            <ThresholdFilter level="INFO" onMatch="" onMismatch="DENY"/>
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="50 MB"/>
            </Policies>
            <!--最多10个日志文件-->
            <DefaultRolloverStrategy compressionLevel="0" max="10"/>
        </RollingFile>
    </appenders>

    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--过滤掉spring和druid的一些无用的DEBUG信息-->
        <logger name="org.springframework" level="ERROR"> </logger>
        <logger name="com.alibaba.druid" level="ERROR"> </logger>
        <!--vm和jsp两种视图同时存在时，如果找不到vm，就会去找jsp文件。但是这里老是会打印error日志-->
        <logger name="org.apache.velocity" level="FATAL"> </logger>

        <root level="INFO">
            <appender-ref ref="Console"/>
            <appender-ref ref="logfile"/>
        </root>
    </loggers>
</configuration>